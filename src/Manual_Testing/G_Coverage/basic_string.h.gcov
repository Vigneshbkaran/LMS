        -:    0:Source:main.cpp
        -:    0:Graph:main.gcno
        -:    0:Data:main.gcda
        -:    0:Runs:3
        -:    0:Programs:1
        -:    1:#include<iostream>
        -:    2:#include<stdio.h>
        -:    3:#include<istream>
        -:    4:#include<fstream>
        -:    5:#include<stdlib.h>
        -:    6:#include<string.h>
        -:    7:#include<signal.h>
        -:    8:#include "logger.h"
        -:    9:#include "Database.h"
        -:   10:#define PIN 1234
        -:   11:#define START_VALUE 1
        -:   12:#define LIMIT 3
        -:   13:
        -:   14:using namespace std;
        -:   15:
        -:   16:void login();
        -:   17:void registr();
        -:   18:void forgot();
        -:   19:void AdminLogin();
        -:   20:void mainMenu();
        -:   21:
        1:   22:void Client()
        -:   23:{
        -:   24:        //A null terminated array of character
        -:   25:        //pointers
        1:   26:        char *args[]={"./client",NULL};
        1:   27:        execvp(args[0],args);
        -:   28:     
        -:   29:        /*All statements are ignored after execvp() call as this whole
        -:   30:        process(execDemo.c) is replaced by another process (EXEC.c)
        -:   31:        */
        1:   32:        cout<<"Ending-----"<<endl;
    #####:   33:}
        -:   34:
        1:   35:void Server()
        -:   36:{
        -:   37:    //A null terminated array of character
        -:   38:    //pointers
        1:   39:    char *args[]={"./server",NULL};
        1:   40:    execvp(args[0],args);
        -:   41:
        -:   42:    /*All statements are ignored after execvp() call as this whole
        -:   43:    process(execDemo.c) is replaced by another process (EXEC.c)
        -:   44:    */
        1:   45:    cout<<"Ending-----"<<endl;
    #####:   46:}
        -:   47:
        -:   48:/* 
        -:   49: * signal ctrl+c is used to return control to main menu
        -:   50: */
        1:   51:void sigint_handler(int signal)
        -:   52:{
        1:   53:	cout << "\n\nCaught ^C\n " << endl;
        1:   54:	cout << "Returning to main menu\n" << endl;
        1:   55:	mainMenu();
    #####:   56:}
        -:   57:/*
        -:   58: * ctrl+z signal is used to exit the program
        -:   59: */
        1:   60:void sigtstp_handler(int signal)
        -:   61:{
        1:   62:	cout << "\n\nCaught ^Z\n "<< endl;
        1:   63:	cout << "Program exited Successfully ...\n" << endl;
        1:   64:	exit(1);
        -:   65:}
        -:   66:
        -:   67:/*
        -:   68: * login code for admin
        -:   69: *login credentials checking
        -:   70: *given access over database
        -:   71: *insert/retrieve/delete data from database
        -:   72: */
        2:   73:void AdminLogin()
        -:   74:{
        2:   75:    int Pin=PIN;
        2:   76:    int Input_Pin=0;
        2:   77:    int Warning=1;
        -:   78:    int ch;
    #####:   79:    do
        -:   80:    {
        -:   81:        //Checking Pass Code
        2:   82:        LOG_INFO("Enter Pin: ");
        2:   83:        cin>>Input_Pin;
        2:   84:        if(Input_Pin==Pin)
        -:   85:        {
        2:   86:            LOG_INFO("Login Succesful");
        2:   87:            cout<<endl;
        2:   88:            LOG_INFO("***");
        2:   89:            cout<<endl;
        2:   90:            LOG_INFO("*HELLO ADMIN*");
        2:   91:            cout<<endl;
        2:   92:            LOG_INFO("***");
        -:   93:
        2:   94:            LOG_INFO("1.Access Database\n");
        2:   95:	    LOG_INFO("2.Customer Support\n");
        2:   96:            LOG_INFO("Enter your choice");
        2:   97:            cin>>ch;
        2:   98:            switch(ch){
        1:   99:                case 1:Database();
    #####:  100:                       break;
        1:  101:		case 2:Client();
    #####:  102:		       break;
    #####:  103:                default:LOG_ERROR("Enter valid choice");
        -:  104:            }
        -:  105:        }
        -:  106:        else
        -:  107:        {
        -:  108:                        //Wrong Pin attemps 3
    #####:  109:            Warning++;
    #####:  110:            LOG_ERROR("Try again");
    #####:  111:            cout<<endl;
        -:  112:        }
        -:  113:    }
        -:  114:         //Pass Code attempts Exceeded 3 times then Accout is Bloked
    #####:  115:    while(Warning<=LIMIT && Input_Pin!=Pin);
        -:  116:    {
    #####:  117:        if(Warning>LIMIT)
        -:  118:        {
    #####:  119:            LOG_ERROR("Your Account Is Blocked! ");
    #####:  120:            cout<<endl;
    #####:  121:            exit(0);
        -:  122:        }
        -:  123:    }
    #####:  124:}
        -:  125:
        -:  126:/*
        -:  127: *User code
        -:  128: *registration of user with valid credentials
        -:  129: *login with valid credentials
        -:  130: *can recover credentials by providing proper registration credentials
        -:  131: *Customer support is provided to resolve issues
        -:  132: */
        1:  133:void Menu()
        -:  134:{
        -:  135:    int choice;
        1:  136:    LOG_INFO("             ***");
        1:  137:    cout<<endl<<endl;
        1:  138:    LOG_INFO("             *    Welcome to login page     **");
        1:  139:    cout<<endl<<endl;
        1:  140:    LOG_INFO("             ***");
        1:  141:    cout<<endl<<endl<<endl;
        -:  142:
        -:  143:
        1:  144:    LOG_INFO("                 *        MENU        ***\n\n");
        1:  145:    LOG_INFO("1.LOGIN");
        1:  146:    cout<<endl;
        1:  147:    LOG_INFO("2.REGISTER");
        1:  148:    cout<<endl;
        1:  149:    LOG_INFO("3.FORGOT PASSWORD (or) USERNAME");
        1:  150:    cout<<endl;
        1:  151:    LOG_INFO("4.Customer Support");
        1:  152:    cout<<endl;
        1:  153:    LOG_INFO("5.Exit");
        1:  154:    cout<<endl;
        1:  155:    LOG_INFO("\nEnter your choice :");
        1:  156:    cin>>choice;
        1:  157:    cout<<endl;
        1:  158:    switch(choice)
        -:  159:    {
    #####:  160:        case 1:
    #####:  161:            login();
    #####:  162:            break;
    #####:  163:        case 2:
    #####:  164:            registr();
    #####:  165:            break;
    #####:  166:        case 3:
    #####:  167:            forgot();
    #####:  168:            break;
        1:  169:        case 4:
        1:  170:	    Server();
    #####:  171:            break;
    #####:  172:        case 5:
    #####:  173:            LOG_INFO("Thanks for using this program.\nThis program is created by GROUP-1 \n\n");
    #####:  174:            break;
    #####:  175:        default:
    #####:  176:            LOG_ERROR("You've made a mistake , Try again..\n");
    #####:  177:            Menu();
        -:  178:    }
    #####:  179:}
        -:  180:/*menu for user after logged in with valid credentials
        -:  181: * can retrieve book URLs to download books digitally
        -:  182: * Utilize customer support
        -:  183: */
    #####:  184:void UserMenu()
        -:  185:{
    #####:  186:	cout<<"1.Retrieve Data"<<endl;
    #####:  187:        cout<<"2.Customer Support"<<endl;
    #####:  188:        cout<<"3.Exit"<<endl;
        -:  189:        int Choice;
    #####:  190:        cout<<"Enter Your Choice: ";
    #####:  191:        cin>>Choice;
    #####:  192:        switch(Choice)
        -:  193:        {
    #####:  194:                case 1:
    #####:  195:                        retrieve();
    #####:  196:                        break;
    #####:  197:                case 2:
    #####:  198:                        Server();
    #####:  199:                        break;
    #####:  200:                case 3:
    #####:  201:                        exit(0);
        -:  202:                        break;
    #####:  203:                default:
    #####:  204:                        cout<<"Enter Valid Choice"<<endl;
        -:  205:        }
        -:  206:
        -:  207:
    #####:  208:}
        -:  209:/*function for login credentials
        -:  210: * need to register to download books with valid credentials
        -:  211: */
    #####:  212:void login()
        -:  213:{
        -:  214:    int count;
    #####:  215:    string user,pass,user_,pass_;
        -:  216:
    #####:  217:    LOG_INFO("Please enter the following details");
    #####:  218:    cout<<endl;
    #####:  219:    LOG_INFO("USERNAME :");
    #####:  220:    cout<<endl;
    #####:  221:    cin>>user;
    #####:  222:    LOG_INFO("PASSWORD :");
    #####:  223:    cin>>pass;
        -:  224:	//file created to store registered details of user
    #####:  225:    ifstream input("database.txt");
    #####:  226:    while(input>>user_>>pass_)
        -:  227:    {
    #####:  228:        if(user_==user && pass_==pass)
        -:  229:
        -:  230:        {
    #####:  231:            count = START_VALUE;
        -:  232:        }
        -:  233:    }
    #####:  234:    input.close();
    #####:  235:    if(count==START_VALUE)
        -:  236:    {
    #####:  237:        LOG_INFO("\nHello   ");
    #####:  238:        cout<<user;
    #####:  239:        LOG_INFO("\n<---LOGIN SUCCESSFUL--->\n");
        -:  240:
    #####:  241:	cout<<"1.Retrieve Data"<<endl;
    #####:  242:	cout<<"2.Customer Support"<<endl;
    #####:  243:	cout<<"3.Exit"<<endl;
        -:  244:	int Choice;
    #####:  245:	cout<<"Enter Your Choice : ";
    #####:  246:	cin>>Choice;
    #####:  247:	switch(Choice)
        -:  248:	{
    #####:  249:		case 1:
    #####:  250:			connection();
    #####:  251:			retrieve();
        -:  252:			//UserMenu();
    #####:  253:			break;
    #####:  254:		case 2:
    #####:  255:			Server();
        -:  256:			//UserMenu();
    #####:  257:			break;
    #####:  258:		case 3:
    #####:  259:			exit(0);
        -:  260:			break;
    #####:  261:		default:
    #####:  262:			cout<<"Enter Valid Choice"<<endl;
        -:  263:	}
        -:  264:
    #####:  265:        cout<<endl;
    #####:  266:        cin.get();
    #####:  267:        cin.get();
    #####:  268:        Menu();
        -:  269:    }
        -:  270:    else
        -:  271:    {
    #####:  272:        LOG_ERROR("\nLOGIN ERROR\nUsername or Password is incorrect\n");
    #####:  273:        Menu();
        -:  274:    }
    #####:  275:}
        -:  276:
        -:  277:
        -:  278:/*function for regitration
        -:  279: * user needs to register with valid credentials
        -:  280: */
    #####:  281:void registr()
        -:  282:{
        -:  283:
    #####:  284:    string reguser,regpass,reg_user,reg_pass;
        -:  285:        
    #####:  286:    LOG_INFO("Enter the username :");
    #####:  287:    cin>>reguser;
    #####:  288:   LOG_INFO("\nEnter the password :");
    #####:  289:    cin>>regpass;
        -:  290:
    #####:  291:    ofstream reg("database.txt",ios::app);
    #####:  292:    reg<<reguser<<' '<<regpass<<endl;
        -:  293:        
        -:  294:        
    #####:  295:    LOG_INFO("\nRegistration Sucessful\n");
    #####:  296:    Menu();
    #####:  297:}
        -:  298:/*user can recover either password or username by providing valid registered credential*/
        -:  299:
    #####:  300:void forgot()
        -:  301:{
        -:  302:    int ch;
        -:  303:
    #####:  304:    LOG_INFO("Forgot your password\n");
    #####:  305:    LOG_INFO("1.Search your id by username");
    #####:  306:    cout<<endl;
    #####:  307:    LOG_INFO("2.Search your id by password");
    #####:  308:    cout<<endl;
    #####:  309:    LOG_INFO("3.Main menu");
    #####:  310:    cout<<endl;
    #####:  311:    LOG_INFO("Enter your choice :");
    #####:  312:    cin>>ch;
    #####:  313:    switch(ch)
        -:  314:    {
    #####:  315:        case 1:
        -:  316:        {
    #####:  317:            int count=0;
    #####:  318:            string searchuser,search_user,search_pass;
    #####:  319:            LOG_INFO("\nEnter your username :");
    #####:  320:            cin>>searchuser;
        -:  321:	//Database is used to store registered credentials of user
    #####:  322:            ifstream searchu("database.txt");
    #####:  323:            while(searchu>>search_user>>search_pass)
        -:  324:            {
    #####:  325:                if(search_user==searchuser)
        -:  326:                {
    #####:  327:                    count=START_VALUE;
        -:  328:                }
        -:  329:            }
    #####:  330:            searchu.close();
    #####:  331:            if(count==START_VALUE)
        -:  332:            {
    #####:  333:                LOG_INFO("\n\nHurray, Account found\n");
    #####:  334:                LOG_INFO("\nYour password is ");
    #####:  335:                cout<<search_pass;
    #####:  336:                cin.get();
    #####:  337:                cin.get();
        -:  338:
    #####:  339:                Menu();
        -:  340:            }
        -:  341:            else
        -:  342:            {
    #####:  343:                LOG_ERROR("\nSorry, Your UserID not found in our database\n");
    #####:  344:                LOG_INFO("\nPlease contact your system administrator for more details \n");
    #####:  345:                cin.get();
    #####:  346:                cin.get();
    #####:  347:                Menu();
        -:  348:            }
    #####:  349:                break;
        -:  350:        }
    #####:  351:        case 2:
        -:  352:        {
    #####:  353:            int count=0;
    #####:  354:            string searchpass,searchuser2,searchpass2;
    #####:  355:            LOG_INFO("\nEnter the password :");
    #####:  356:            cin>>searchpass;
        -:  357:
    #####:  358:            ifstream searchp("database.txt");
    #####:  359:            while(searchp>>searchuser2>>searchpass2)
        -:  360:            {
    #####:  361:                if(searchpass2==searchpass)
        -:  362:                {
    #####:  363:                    count=START_VALUE;
        -:  364:                }
        -:  365:            }
    #####:  366:            searchp.close();
    #####:  367:            if(count==1)
        -:  368:            {
    #####:  369:               LOG_INFO("\nAccount found in the Database \n");
    #####:  370:                LOG_INFO("\nYour Id is : ");
    #####:  371:                cout<<searchuser2;
    #####:  372:                cin.get();
    #####:  373:                cin.get();
        -:  374:
    #####:  375:                Menu();
        -:  376:            }
        -:  377:            else
        -:  378:            {
    #####:  379:                LOG_ERROR("Sorry, We cannot find your account in our database \n");
    #####:  380:                LOG_INFO("\nKindly contact your administrator for more information\n");
    #####:  381:                cin.get();
    #####:  382:                cin.get();
    #####:  383:                Menu();
        -:  384:            }
        -:  385:
    #####:  386:            break;
        -:  387:        }
        -:  388:
    #####:  389:        case 3:
        -:  390:        {
    #####:  391:            cin.get();
    #####:  392:            Menu();
        -:  393:        }
    #####:  394:        default:
    #####:  395:            LOG_ERROR("Sorry, You entered wrong choice. Kindly try again");
    #####:  396:            cout<<endl;
    #####:  397:            forgot();
        -:  398:    }
    #####:  399:}
        -:  400:/*Main menu
        -:  401: *menu for admin or user
        -:  402: */
        4:  403:void mainMenu()
        -:  404:{
        4:  405:    LOG_INFO("----------------WELCOME TO THE ONLINE LMS------------------");
        4:  406:    cout<<endl;
        4:  407:    LOG_INFO("//   1.Admin Login   //");
        4:  408:    cout<<endl;
        4:  409:    LOG_INFO("//   2.User Login    //");
        4:  410:    cout<<endl;
        -:  411:    int Choice;
        4:  412:    signal(SIGINT, sigint_handler);
        4:  413:    signal(SIGTSTP, sigtstp_handler);    
        4:  414:    LOG_INFO("Enter Login Type ");
        4:  415:    cin>>Choice;
        -:  416:    
        3:  417:    switch(Choice)
        -:  418:    {
        2:  419:        case 1:
        2:  420:            AdminLogin();
    #####:  421:            break;
        -:  422:        
        1:  423:        case 2:
        1:  424:            Menu();
    #####:  425:            break;
    #####:  426:        default:
    #####:  427:            LOG_ERROR("Enter Correct Login Type");
    #####:  428:            cout<<endl;
        -:  429:    }
    #####:  430:}
        -:  431:
        -:  432:
        -:  433:
        -:  434://main code
        3:  435:int main()
        -:  436:{
        3:  437:    LOG_INIT(); //Initialization for loggers
        -:  438:
        3:  439:    mainMenu();   //Menu for admin and user
    #####:  440:    signal(SIGINT, sigint_handler);  //signal call ctrl+c
    #####:  441:    signal(SIGTSTP, sigtstp_handler);  //ctrl+z
        -:  442:    
    #####:  443:    LOG_DEINIT();   //Deinitialization of loggers
    #####:  444:    return 0;
        9:  445:}
        -:  446:
